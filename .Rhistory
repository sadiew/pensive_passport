by = list(month, _is_liquid, initial_spend_month)]
business_breakout <- new_vs_existing[, list(spend = sum(spend)),
by = list(month, _is_liquid, initial_spend_month)]
head(new_vs_existing)
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, _is_liquid, initial_spend_month)]
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, _is_liquid)]
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, _is_liquid, initial_spend_month)]
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, initial_spend_month)]
setnames(new_vs_existing, '_is_liquid', 'dynamic')
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, dynamic, initial_spend_month)]
View(business_breakout)
new_vs_existing$month <- paste0(month(new_vs_existing$day), '/', year(new_vs_existing$day))
new_vs_existing$initial_spend_month <- paste0(month(new_vs_existing$initial_spend_date), '/', year(new_vs_existing$initial_spend_date))
new_vs_existing <- data.table(new_vs_existing)
setnames(new_vs_existing, '_is_liquid', 'dynamic')
new_vs_existing <- dbGetQuery(con, "select d.day, d.advertisable_eid, d._is_liquid, da.initial_spend_date,
sum(d.media_cost)/1e6 as spend
from deliroll_adcube_with_ads d
join deli_advertisable_initial_spend_dates da on d.advertisable_eid = da.advertisable_eid
where d.day >= '2015-01-01'
group by 1,2,3,4 order by 2,3,1")
new_vs_existing$month <- paste0(month(new_vs_existing$day), '/', year(new_vs_existing$day))
new_vs_existing$initial_spend_month <- paste0(month(new_vs_existing$initial_spend_date), '/', year(new_vs_existing$initial_spend_date))
new_vs_existing <- data.table(new_vs_existing)
setnames(new_vs_existing, '_is_liquid', 'dynamic')
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, dynamic, initial_spend_month)]
View(business_breakout)
ownership <- dbGetQuery(con, "select advertisables.eid as advertisable_eid, advertisables.id as adv_id, organizations.eid AS org_eid,
max(u1.email) as sales_email,
max(u2.email) as ops_email
from organizations
join advertisables on advertisables.organization_id = organizations.id
left outer join users u1 on u1.organization_id = organizations.sales_organization_id
left outer join users u2  on u2.organization_id = organizations.ops_organization_id
where advertisable_eid = 'GHKASGKQ7BHAJBFTYBABYD'
group by advertisable_eid,adv_id,org_eid")
ownership <- dbGetQuery(con, "select advertisables.eid as advertisable_eid, advertisables.id as adv_id, organizations.eid AS org_eid,
max(u1.email) as sales_email,
max(u2.email) as ops_email
from organizations
join advertisables on advertisables.organization_id = organizations.id
left outer join users u1 on u1.organization_id = organizations.sales_organization_id
left outer join users u2  on u2.organization_id = organizations.ops_organization_id
where advertisable.eid = 'GHKASGKQ7BHAJBFTYBABYD'
group by advertisable_eid,adv_id,org_eid")
ownership <- dbGetQuery(con, "select advertisables.eid as advertisable_eid, advertisables.id as adv_id, organizations.eid AS org_eid,
max(u1.email) as sales_email,
max(u2.email) as ops_email
from organizations
join advertisables on advertisables.organization_id = organizations.id
left outer join users u1 on u1.organization_id = organizations.sales_organization_id
left outer join users u2  on u2.organization_id = organizations.ops_organization_id
where advertisables.eid = 'GHKASGKQ7BHAJBFTYBABYD'
group by advertisable_eid,adv_id,org_eid")
View(ownership)
View(business_breakout)
View(business_breakout)
business_breakout$first_month = ifelse(business_breakout$month == business_breakout$initial_spend_month, 1, 0)
View(business_breakout)
new_vs_existing$first_month = ifelse(new_vs_existing$month == new_vs_existing$initial_spend_month, 1, 0)
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, dynamic, initial_spend_month)]
View(business_breakout)
business_breakout <- new_vs_existing[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(month, dynamic, first_month)]
View(business_breakout)
business_breakout[order(month)]
business_breakout[order(month, dynamic, first_month)]
write.csv(business_breakout, '~/Desktop/business_breakout.csv')
library(data.table)
library(RPostgreSQL)
library(lubridate)
library(tidyr)
options(scipen = 999)
#create driver object
drv <- dbDriver("PostgreSQL")
#creates and opens a connection to the db
con <- dbConnect(drv, dbname = "prodinado",
user = 'swilhelm',
password = 'comfortablymustpairtomorrow',
host = 'db.vpc.deli.adroll.com',
port = '15432')
first_dynamic_ad_created_date <- dbGetQuery(con, "select a.eid as advertisable_eid, date(min(ads.created_date)) as first_created_date
from ads
join advertisables a on ads.advertisable_id=a.id
where (is_liquid = 't' or is_fb_dynamic = 't')
group by 1
order by 2")
first_dynamic_ad_created_date <- data.table(first_dynamic_ad_created_date)
first_dynamic_ad_created_date$month <- month(first_dynamic_ad_created_date$first_created_date)
first_dynamic_ad_created_date <- subset(first_dynamic_ad_created_date, first_created_date >= '2014-11-01')
first_dynamic_by_month <- first_dynamic_ad_created_date[, list(count = length(advertisable_id)),
by = list(month)]
first_dynamic_by_month <- first_dynamic_ad_created_date[, list(count = length(advertisable_eid)),
by = list(month)]
View(first_dynamic_by_month)
spend_data <- dbGetQuery(con, "select d.day, d.advertisable_eid, sum(d.media_cost)/1e6 as spend, sum(d.liquid_cost)/1e6 as liquid_markup
from deliroll_adcube_with_ads d
where _is_liquid = 't' and
day >= '2015-01-01' group by 2,1 order by 2,1")
dynamic_new_existing <- first_dynamic_ad_created_date %>%
left_join(new_vs_existing)
library(dplyr)
dynamic_new_existing <- first_dynamic_ad_created_date %>%
left_join(new_vs_existing)
dynamic_new_existing <- first_dynamic_ad_created_date %>%
select(-month) %>%
left_join(new_vs_existing, by = "advertisable_eid")
View(dynamic_new_existing)
dynamic_new_existing <- first_dynamic_ad_created_date %>%
select(-month) %>%
left_join(new_vs_existing, by = "advertisable_eid")
View(dynamic_new_existing)
View(first_dynamic_ad_created_date)
View(first_dynamic_ad_created_date)
spend_data$day <- as.Date(spend_data$day)
spend_data$month <- paste0(month(spend_data$day), '/', year(spend_data$day))
spend_data <- data.table(spend_data)
adv_level_data <- spend_data[, list(spend = sum(spend, na.rm=TRUE)),]
adv_level_data <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
View(adv_level_data)
summary <- first_dynamic_ad_created_date %>% left_join(adv_level_data, by = "advertisable_eid")
View(summary)
sum(summary$spend)
sum(summary$spend, na.rm=TRUE)
summary <- subset(summary, month %in% c(1,2,3))
View(summary)
summary <- first_dynamic_ad_created_date %>% left_join(adv_level_data, by = "advertisable_eid")
sum(summary$spend, na.rm=TRUE)
View(summary)
summary <- subset(summary, month %in% c(1,2,3))
sum(summary$spend, na.rm=TRUE)
adv_level_data <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
summary <- first_dynamic_ad_created_date %>% left_join(adv_level_data, by = "advertisable_eid")
summary <- subset(summary, month %in% c(1,2,3))
sum(summary$spend, na.rm=TRUE)
adv_level_data <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
summary <- first_dynamic_ad_created_date %>% left_join(adv_level_data, by = "advertisable_eid")
summary <- subset(summary, month %in% c(2,3))
sum(summary$spend, na.rm=TRUE)
grouped_spend <- spend_data[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(advertisable_eid, month)]
spend_spread <- spread(grouped_spend, month, spend)
setnames(spend_spread, '1/2015', 'jan_2015')
setnames(spend_spread, '2/2015', 'feb_2015')
setnames(spend_spread, '3/2015', 'mar_2015')
spend_spread$jan_2015[is.na(spend_spread$jan_2015)] = 0
spend_spread$feb_2015[is.na(spend_spread$feb_2015)] = 0
spend_spread$mar_2015[is.na(spend_spread$mar_2015)] = 0
sum(spend_spread$jan_2015)
sum(spend_spread_feb_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$mar_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1 & spend_spread$feb_2015>0.1])
sum(spend_spread$mar_2015[spend_spread$jan_2015>0.1])/12*31
library(data.table)
library(RPostgreSQL)
library(lubridate)
library(tidyr)
library(dplyr)
options(scipen = 999)
#create driver object
drv <- dbDriver("PostgreSQL")
#creates and opens a connection to the db
con <- dbConnect(drv, dbname = "prodinado",
user = 'swilhelm',
password = 'comfortablymustpairtomorrow',
host = 'db.vpc.deli.adroll.com',
port = '15432')
advertisable_details <- dbGetQuery(con, "select eid as advertisable_eid, name
from advertisables")
spend_data <- dbGetQuery(con, "select d.day, d.advertisable_eid, sum(d.media_cost)/1e6 as spend, sum(d.liquid_cost)/1e6 as liquid_markup
from deliroll_adcube_with_ads d
where _is_liquid = 't' and
day >= '2015-01-01' group by 2,1 order by 2,1")
spend_data$day <- as.Date(spend_data$day)
spend_data$month <- paste0(month(spend_data$day), '/', year(spend_data$day))
spend_data <- data.table(spend_data)
grouped_spend <- spend_data[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(advertisable_eid, month)]
spend_spread <- spread(grouped_spend, month, spend)
setnames(spend_spread, '1/2015', 'jan_2015')
setnames(spend_spread, '2/2015', 'feb_2015')
setnames(spend_spread, '3/2015', 'mar_2015')
spend_spread$jan_2015[is.na(spend_spread$jan_2015)] = 0
spend_spread$feb_2015[is.na(spend_spread$feb_2015)] = 0
spend_spread$mar_2015[is.na(spend_spread$mar_2015)] = 0
spend_spread$feb_2015 <- round((spend_spread$feb_2015)/28*30,2)
spend_spread$mar_2015 <- round((spend_spread$mar_2015)/12*30,2)
spend_spread$jan_feb_delta = spend_spread$feb_2015 - spend_spread$jan_2015
spend_spread$feb_mar_delta = spend_spread$mar_2015 - spend_spread$feb_2015
adv_level <- merge(spend_spread, advertisable_details, by = 'advertisable_eid', all.x=TRUE, all.y=FALSE)
adv_level <- adv_level[order(jan_feb_delta),]
setcolorder(adv_level, c('advertisable_eid', 'name', 'jan_2015', 'feb_2015', 'mar_2015', 'jan_feb_delta', 'feb_mar_delta'))
hist(spend_spread$jan_feb_delta, breaks = 50, main = 'Jan - Feb Delta', xlab = paste0('Median Delta: ', median(spend_spread$jan_feb_delta, na.rm=TRUE)))
hist(spend_spread$feb_mar_delta, breaks = 50, main = 'March - Feb Delta', xlab = paste0('Median Delta: ', media
dynamic_ads_created <- dbGetQuery(con, "select date(ads.created_date) as created_date, count(ads.eid) as ad_count
from ads
where (is_liquid = 't' or is_fb_dynamic = 't') and ads.created_date >= '2015-01-01'
group by 1
order by 1")
dynamic_ads_created$creation_month = month(dynamic_ads_created$created_date)
sum(dynamic_ads_created$ad_count[dynamic_ads_created$creation_month==3], na.rm=TRUE)
dynamic_ads_created <- dbGetQuery(con, "select date(ads.created_date) as created_date, count(ads.eid) as ad_count
from ads
where (is_liquid = 't' or is_fb_dynamic = 't') and ads.created_date >= '2015-01-01'
group by 1
order by 1")
dynamic_ads_created$creation_month = month(dynamic_ads_created$created_date)
sum(dynamic_ads_created$ad_count[dynamic_ads_created$creation_month==3], na.rm=TRUE)
sum(dynamic_ads_created$ad_count[dynamic_ads_created$creation_month==2], na.rm=TRUE)
sum(dynamic_ads_created$ad_count[dynamic_ads_created$creation_month==1], na.rm=TRUE)
first_dynamic_ad_created_date <- dbGetQuery(con, "select a.eid as advertisable_eid, date(min(ads.created_date)) as first_created_date
from ads
join advertisables a on ads.advertisable_id=a.id
where (is_liquid = 't' or is_fb_dynamic = 't')
group by 1
order by 2")
first_dynamic_ad_created_date <- data.table(first_dynamic_ad_created_date)
first_dynamic_ad_created_date$month <- month(first_dynamic_ad_created_date$first_created_date)
first_dynamic_ad_created_date <- subset(first_dynamic_ad_created_date, first_created_date >= '2014-11-01')
first_dynamic_by_month <- first_dynamic_ad_created_date[, list(count = length(advertisable_eid)),
by = list(month)]
adv_level_data <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
View(adv_level_data)
summary <- first_dynamic_ad_created_date %>% left_join(adv_level_data, by = "advertisable_eid")
summary <- subset(summary, month %in% c(2,3))
sum(summary$spend, na.rm=TRUE)
library(data.table)
library(RPostgreSQL)
library(lubridate)
library(tidyr)
library(dplyr)
options(scipen = 999)
#create driver object
drv <- dbDriver("PostgreSQL")
#creates and opens a connection to the db
con <- dbConnect(drv, dbname = "prodinado",
user = 'swilhelm',
password = 'comfortablymustpairtomorrow',
host = 'db.vpc.deli.adroll.com',
port = '15432')
advertisable_details <- dbGetQuery(con, "select eid as advertisable_eid, name
from advertisables")
spend_data <- dbGetQuery(con, "select d.day, d.advertisable_eid, sum(d.media_cost)/1e6 as spend, sum(d.liquid_cost)/1e6 as liquid_markup
from deliroll_adcube_with_ads d
where _is_liquid = 't' and
day >= '2015-01-01' group by 2,1 order by 2,1")
spend_data$day <- as.Date(spend_data$day)
spend_data$month <- paste0(month(spend_data$day), '/', year(spend_data$day))
spend_data <- data.table(spend_data)
grouped_spend <- spend_data[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(advertisable_eid, month)]
spend_spread <- spread(grouped_spend, month, spend)
setnames(spend_spread, '1/2015', 'jan_2015')
setnames(spend_spread, '2/2015', 'feb_2015')
setnames(spend_spread, '3/2015', 'mar_2015')
spend_spread$jan_2015[is.na(spend_spread$jan_2015)] = 0
spend_spread$feb_2015[is.na(spend_spread$feb_2015)] = 0
spend_spread$mar_2015[is.na(spend_spread$mar_2015)] = 0
spend_spread$feb_2015 <- round((spend_spread$feb_2015)/28*30,2)
spend_spread$mar_2015 <- round((spend_spread$mar_2015)/12*30,2)
spend_spread$jan_feb_delta = spend_spread$feb_2015 - spend_spread$jan_2015
spend_spread$feb_mar_delta = spend_spread$mar_2015 - spend_spread$feb_2015
spend_spread <- merge(spend_spread, advertisable_details, by = 'advertisable_eid', all.x=TRUE, all.y=FALSE)
View(spend_spread)
spend_spread <- spend_spread[order(jan_feb_delta),]
View(spend_spread)
setcolorder(spend_spread, c('advertisable_eid', 'name', 'jan_2015', 'feb_2015', 'mar_2015', 'jan_feb_delta', 'feb_mar_delta'))
View(spend_spread)
first_dynamic_ad_created_date <- dbGetQuery(con, "select a.eid as advertisable_eid, date(min(ads.created_date)) as first_created_date
from ads
join advertisables a on ads.advertisable_id=a.id
where (is_liquid = 't' or is_fb_dynamic = 't')
group by 1
order by 2")
first_dynamic_ad_created_date <- data.table(first_dynamic_ad_created_date)
first_dynamic_ad_created_date$month <- month(first_dynamic_ad_created_date$first_created_date)
first_dynamic_ad_created_date <- subset(first_dynamic_ad_created_date, first_created_date >= '2015-01-01')
first_dynamic_by_month <- first_dynamic_ad_created_date[, list(count = length(advertisable_eid)),
by = list(month)]
qtd_dynamic_revenue <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
summary <- first_dynamic_ad_created_date %>% left_join(qtd_dynamic_revenue, by = "advertisable_eid")
summary <- subset(summary, month %in% c(2,3))
sum(summary$spend, na.rm=TRUE)
rollover_jan_feb <- sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1])
rollover_jan_feb
rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015)
rollover_jan_feb
rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015[spend_spread$feb_2015>0.1])
rollover_jan_feb
rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015)
rollover_jan_feb
retained_rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015[spend_spread$feb_2015>0.1])
retained_rollover_jan_feb
sum(spend_spread$jan_2015)
sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$mar_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$feb_2015)
sum(spend_spread$mar_2015[spend_spread$feb_2015>0.1])
sum(spend_spread$jan_2015)
sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$mar_2015[spend_spread$jan_2015>0.1])
sum(spend_spread$feb_2015)
sum(spend_spread$mar_2015[spend_spread$feb_2015>0.1])
first_dynamic_ad_created_date <- dbGetQuery(con, "select a.eid as advertisable_eid, date(min(ads.created_date)) as first_created_date
from ads
join advertisables a on ads.advertisable_id=a.id
where (is_liquid = 't' or is_fb_dynamic = 't')
group by 1
order by 2")
first_dynamic_ad_created_date <- data.table(first_dynamic_ad_created_date)
first_dynamic_ad_created_date$month <- month(first_dynamic_ad_created_date$first_created_date)
first_dynamic_ad_created_date <- subset(first_dynamic_ad_created_date, first_created_date >= '2015-01-01')
first_dynamic_by_month <- first_dynamic_ad_created_date[, list(count = length(advertisable_eid)),
by = list(month)]
qtd_dynamic_revenue <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
new_dynamic_qtd <- first_dynamic_ad_created_date %>% left_join(qtd_dynamic_revenue, by = "advertisable_eid")
new_feb_march <- subset(summary, month %in% c(2,3))
sum(new_feb_march$spend, na.rm=TRUE)
View(new_feb_march)
new_feb_march$spend[is.na(new_feb_march$spend)] = 0
sum(new_feb_march$spend, na.rm=TRUE)
length(new_feb_march$spend>0.1)
View(new_feb_march)
new_feb_march[order(spend)]
new_feb_march<- new_feb_march[order(spend)]
View(new_feb_march)
length(new_feb_march$advertisable_eid[new_feb_march$spend>0.1])
length(new_feb_march$advertisable_eid[new_feb_march$spend>0])
length(new_feb_march$advertisable_eid[new_feb_march$spend>0.1])
length(new_feb_march$advertisable_eid[new_feb_march$spend>0])
qtd_dynamic_revenue <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
new_dynamic_qtd <- first_dynamic_ad_created_date %>% left_join(qtd_dynamic_revenue, by = "advertisable_eid")
qtd_dynamic_revenue <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
qtd_dynamic_revenue <- spend_data[, list(spend = sum(spend, na.rm=TRUE)), by = list(advertisable_eid)]
new_dynamic_qtd <- first_dynamic_ad_created_date %>% left_join(qtd_dynamic_revenue, by = "advertisable_eid")
new_dynamic_qtd$spend[is.na(new_dynamic_qtd$spend)] = 0
sum(new_dynamic_qtd$spend, na.rm=TRUE)
new_dynamic_qtd<- new_dynamic_qtd[order(spend)]
length(new_dynamic_qtd$advertisable_eid[new_dynamic_qtd$spend>0])
library(data.table)
library(RPostgreSQL)
library(lubridate)
library(tidyr)
library(dplyr)
options(scipen = 999)
#create driver object
drv <- dbDriver("PostgreSQL")
#creates and opens a connection to the db
con <- dbConnect(drv, dbname = "prodinado",
user = 'swilhelm',
password = 'comfortablymustpairtomorrow',
host = 'db.vpc.deli.adroll.com',
port = '15432')
advertisable_details <- dbGetQuery(con, "select eid as advertisable_eid, name
from advertisables")
spend_data <- dbGetQuery(con, "select d.day, d.advertisable_eid, sum(d.media_cost)/1e6 as spend, sum(d.liquid_cost)/1e6 as liquid_markup
from deliroll_adcube_with_ads d
where _is_liquid = 't' and
day >= '2015-01-01' group by 2,1 order by 2,1")
spend_data$day <- as.Date(spend_data$day)
spend_data$month <- paste0(month(spend_data$day), '/', year(spend_data$day))
spend_data <- data.table(spend_data)
grouped_spend <- spend_data[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(advertisable_eid, month)]
spend_spread <- spread(grouped_spend, month, spend)
setnames(spend_spread, '1/2015', 'jan_2015')
setnames(spend_spread, '2/2015', 'feb_2015')
setnames(spend_spread, '3/2015', 'mar_2015')
spend_spread$jan_2015[is.na(spend_spread$jan_2015)] = 0
spend_spread$feb_2015[is.na(spend_spread$feb_2015)] = 0
spend_spread$mar_2015[is.na(spend_spread$mar_2015)] = 0
spend_spread$jan_2015 <- round((spend_spread$feb_2015)/31*30,2)
spend_spread$feb_2015 <- round((spend_spread$feb_2015)/28*30,2)
spend_spread$mar_2015 <- round((spend_spread$mar_2015)/12*30,2)
spend_spread$jan_feb_delta = spend_spread$feb_2015 - spend_spread$jan_2015
spend_spread$feb_mar_delta = spend_spread$mar_2015 - spend_spread$feb_2015
spend_spread <- merge(spend_spread, advertisable_details, by = 'advertisable_eid', all.x=TRUE, all.y=FALSE)
spend_spread <- spend_spread[order(jan_feb_delta),]
setcolorder(spend_spread, c('advertisable_eid', 'name', 'jan_2015', 'feb_2015', 'mar_2015', 'jan_feb_delta', 'feb_mar_delta'))
sum(spend_spread$jan_2015)
spend_spread$jan_2015 <- round((spend_spread$jan_2015)/31*30,2)
spend_spread$feb_2015 <- round((spend_spread$feb_2015)/28*30,2)
spend_spread$mar_2015 <- round((spend_spread$mar_2015)/12*30,2)
spend_spread$jan_feb_delta = spend_spread$feb_2015 - spend_spread$jan_2015
spend_spread$feb_mar_delta = spend_spread$mar_2015 - spend_spread$feb_2015
spend_spread <- merge(spend_spread, advertisable_details, by = 'advertisable_eid', all.x=TRUE, all.y=FALSE)
spend_spread <- spend_spread[order(jan_feb_delta),]
setcolorder(spend_spread, c('advertisable_eid', 'name', 'jan_2015', 'feb_2015', 'mar_2015', 'jan_feb_delta', 'feb_mar_delta'))
grouped_spend <- spend_data[, list(spend = round(sum(spend, na.rm=TRUE),2)),
by = list(advertisable_eid, month)]
spend_spread <- spread(grouped_spend, month, spend)
setnames(spend_spread, '1/2015', 'jan_2015')
setnames(spend_spread, '2/2015', 'feb_2015')
setnames(spend_spread, '3/2015', 'mar_2015')
spend_spread$jan_2015[is.na(spend_spread$jan_2015)] = 0
spend_spread$feb_2015[is.na(spend_spread$feb_2015)] = 0
spend_spread$mar_2015[is.na(spend_spread$mar_2015)] = 0
spend_spread$jan_2015 <- round((spend_spread$jan_2015)/31*30,2)
spend_spread$feb_2015 <- round((spend_spread$feb_2015)/28*30,2)
spend_spread$mar_2015 <- round((spend_spread$mar_2015)/12*30,2)
spend_spread$jan_feb_delta = spend_spread$feb_2015 - spend_spread$jan_2015
spend_spread$feb_mar_delta = spend_spread$mar_2015 - spend_spread$feb_2015
spend_spread <- merge(spend_spread, advertisable_details, by = 'advertisable_eid', all.x=TRUE, all.y=FALSE)
spend_spread <- spend_spread[order(jan_feb_delta),]
setcolorder(spend_spread, c('advertisable_eid', 'name', 'jan_2015', 'feb_2015', 'mar_2015', 'jan_feb_delta', 'feb_mar_delta'))
sum(spend_spread$jan_2015)
sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1])
retained_rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015[spend_spread$feb_2015>0.1])
rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015)
rollover_jan_feb
retained_rollover_jan_feb <- (sum(spend_spread$feb_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015[spend_spread$feb_2015>0.1])
retained_rollover_jan_feb
retained_rollover_jan_mar <- (sum(spend_spread$mar_2015[spend_spread$jan_2015>0.1]))/sum(spend_spread$jan_2015[spend_spread$mar_2015>0.1])
retained_rollover_jan_mar
View(new_dynamic_qtd)
new_feb_march <- subset(new_dynamic_qtd, month %in% c(2,3))
sum(new_feb_march$spend)
sum(new_feb_march$spend[new_feb_march$month==3])
View(new_feb_march)
sum(new_dynamic_qtd$spend, na.rm=TRUE)
sum(spend_data$spend, na.rm=TRUE)
set_wd('~/Desktop/sw_project')
get_wd()
setwd('~/Desktop/sw_project')
us_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_us.csv')
View(us_per_diem)
setwd('~/Desktop/sw_project')
us_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_us.csv')
intl_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_intl.csv')
us_per_diem$country <- 'United States'
library(dplyr)
View(us_per_diem)
us_per_diem <- us_per_diem %>% select(city, country, m_ie_rate)
View(us_per_diem)
us_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- unique(us_per_diem %>% select(city, country, m_ie_rate))
View(us_per_diem)
us_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, country, m_ie_rate)
intl_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_intl.csv')
intl_per_diem <- select(city, country, m_ie_rate)
View(intl_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_intl.csv')
intl_per_diem <- intl_per_diem %>% select(city, country, m_ie_rate)
View(intl_per_diem)
library(data.table)
us_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, country, m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
View(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/seed_data/per_diem_intl.csv')
intl_per_diem <- intl_per_diem %>% select(city, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
final_per_diem <- rbind(us_per_diem, intl_per_diem)
write.csv(final_per_diem, '/seed_data/per_diem_rates.csv', row.names=FALSE)
write.csv(final_per_diem, '~/Desktop/sw_project/seed_data/per_diem_rates.csv', row.names=FALSE)
View(us_per_diem)
View(intl_per_diem)
View(final_per_diem)
setwd('~/Desktop/sw_project')
library(dplyr)
library(data.table)
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, country, m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem <- intl_per_diem %>% select(city, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
final_per_diem <- rbind(us_per_diem, intl_per_diem)
View(us_per_diem)
us_per_diem$m_ie_rate <- gsub('$', '')
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
View(us_per_diem)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
View(us_per_diem)
setwd('~/Desktop/sw_project')
library(dplyr)
library(data.table)
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem <- intl_per_diem %>% select(city, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
final_per_diem <- rbind(us_per_diem, intl_per_diem)
write.csv(final_per_diem, '~/Desktop/sw_project/original_data_sources/per_diem_rates.csv', row.names=FALSE)
