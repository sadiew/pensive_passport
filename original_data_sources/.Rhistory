left_join(cities, by = c('city', 'state', 'country')) %>%
select(airport_code, name, city_id, name, latitude, longitude)
View(airports)
write.csv(airports, '~/Desktop/sw_project/original_data_sources/airports_model.csv', row.names=FALSE)
View(cities)
View(airports)
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state <- us_airports_by_state %>% select(state, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by="airport_code")
airports$state[is.na(airports$state)] = ''
View(airports)
#City Data - seeded from Airports above
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- mutate(cities, city_id=rownames(cities)) %>% select(city_id, city, state, country)
#Append city id to airports
airports <- airports %>%
left_join(cities, by = c('city', 'state', 'country')) %>%
select(airport_id, airport_code, name, city_id, name, latitude, longitude)
View(airports)
write.csv(airports, '~/Desktop/sw_project/original_data_sources/airports_model.csv', row.names=FALSE)
install.packages('tidyr')
library(dplyr)
library(tidyr)
library(data.table)
#Cost of living data - select necessary columns and bind US + Int'l
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, state, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem$state = ''
intl_per_diem <- intl_per_diem %>% select(city, state, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
intl_per_diem$country <- tolower(intl_per_diem$country)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
intl_per_diem$country <- sapply(intl_per_diem$country, simpleCap)
finalCostOfLiving <- rbind(us_per_diem, intl_per_diem)
data.frame(finalCostOfLiving) %>%
mutate(city = strsplit(as.character(city), ",")) %>%
unnest(city)
finalCostOfLiving <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(finalCostOfLiving) %>%
mutate(city = strsplit(as.character(city), ",")) %>%
unnest(city)
View(finalCostOfLiving)
finalCostOfLiving <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(finalCostOfLiving) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
View(finalCostOfLiving)
subset(finalCostOfLiving, city=='Alexandria')
all_per_diem <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
View(all_per_diem)
View(finalCostOfLiving)
View(all_per_diem)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
View(finalCostOfLiving)
View(all_per_diem)
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state <- us_airports_by_state %>% select(state, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by="airport_code")
airports$state[is.na(airports$state)] = ''
#City Data - seeded from Airports above
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- mutate(cities, city_id=rownames(cities)) %>% select(city_id, city, state, country)
#Append city id to airports
airports <- airports %>%
left_join(cities, by = c('city', 'state', 'country')) %>%
select(airport_id, airport_code, name, city_id, name, latitude, longitude)
View(cities)
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- mutate(cities, city_id=rownames(cities)) %>% select(city_id, city, state, country)
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state <- us_airports_by_state %>% select(state, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by="airport_code")
airports$state[is.na(airports$state)] = ''
#City Data - seeded from Airports above
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- mutate(cities, city_id=rownames(cities)) %>% select(city_id, city, state, country)
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
View(cities)
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- mutate(cities, city_id=rownames(cities)) %>% select(city_id, city, state, country)
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- mutate(cities, city_id=rownames(cities)) %>% select(city_id, city, state, country)
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
cities$m_ie_rate[is.na(cities$m_ie_rate)] = 46
View(cities)
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
cities <- mutate(cities, city_id=rownames(cities)) %>%
select(city_id, city, state, country, m_ie_rate)
cities$m_ie_rate[is.na(cities$m_ie_rate)] = 46
length('sadie')
length(cities$m_ie_rate[cities$m_ie_rate==46])
subset(cities, city=="Paris")
subset(cities, city=="San Francisco")
subset(cities, city=="New York")
subset(cities, city=="Budapest")
subset(cities, city=="Istanbul")
subset(finalCostOfLiving, city=="Istanbul")
subset(cities, city=="Rome")
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
View(us_airports_by_state)
subset(us_airports_by_state, city=="Istanbul")
subset(us_airports_by_state, state=="MI")
library(dplyr)
library(tidyr)
library(data.table)
#Cost of living data - select necessary columns and bind US + Int'l
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, state, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem$state = ''
intl_per_diem <- intl_per_diem %>% select(city, state, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
intl_per_diem$country <- tolower(intl_per_diem$country)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
intl_per_diem$country <- sapply(intl_per_diem$country, simpleCap)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state <- us_airports_by_state %>% select(state, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by="airport_code")
airports$state[is.na(airports$state)] = ''
View(airports)
subset(airports, city=="Istanbul")
subset(us_airports_by_state, code=="SAW")
View(us_airports_by_state)
subset(us_airports_by_state, airport_code=="SAW")
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
View(us_airports_by_state)
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
View(airports)
View(airports)
subset(airports, country=='United States')
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state$country = 'United States'
us_airports_by_state <- us_airports_by_state %>% select(state, country, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by=c('airport_code', 'country'))
airports$state[is.na(airports$state)] = ''
#City Data - seeded from Airports above
cities <- airports %>%
select(city, state, country) %>%
unique()
library(dplyr)
library(tidyr)
library(data.table)
#Cost of living data - select necessary columns and bind US + Int'l
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, state, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem$state = ''
intl_per_diem <- intl_per_diem %>% select(city, state, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
intl_per_diem$country <- tolower(intl_per_diem$country)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
intl_per_diem$country <- sapply(intl_per_diem$country, simpleCap)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
cities <- mutate(cities, city_id=rownames(cities)) %>%
select(city_id, city, state, country, m_ie_rate)
cities$m_ie_rate[is.na(cities$m_ie_rate)] = 46
subset(cities, city=="Istanbul")
subset(cities, city=="New York")
View(finalCostOfLiving)
subset(finalCostOfLiving, city=="New York")
subset(finalCostOfLiving, city=="New York City")
finalCostOfLiving$city[finalCostOfLiving$city=='New York City'] = "New York"
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state$country = 'United States'
us_airports_by_state <- us_airports_by_state %>% select(state, country, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by=c('airport_code', 'country'))
airports$state[is.na(airports$state)] = ''
#City Data - seeded from Airports above
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
cities <- mutate(cities, city_id=rownames(cities)) %>%
select(city_id, city, state, country, m_ie_rate)
cities$m_ie_rate[is.na(cities$m_ie_rate)] = 46
subset(cities, city=='New York')
View(cities)
tail(cities)
library(dplyr)
library(tidyr)
library(data.table)
#Cost of living data - select necessary columns and bind US + Int'l
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, state, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem$state = ''
intl_per_diem <- intl_per_diem %>% select(city, state, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
intl_per_diem$country <- tolower(intl_per_diem$country)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
intl_per_diem$country <- sapply(intl_per_diem$country, simpleCap)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
finalCostOfLiving$city[finalCostOfLiving$city=='New York City'] = "New York"
finalCostOfLiving <- finalCostOfLiving %>% arrange(country, city)
View(finalCostOfLiving)
finalCostOfLiving <- finalCostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate))
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
finalCostOfLiving$city[finalCostOfLiving$city=='New York City'] = "New York"
finalCostOfLiving <- finalCostOfLiving %>% arrange(country, city)
View(finalCostOfLiving)
test_group <- finalCostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate))
View(test_group)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
finalCostOfLiving$city[finalCostOfLiving$city=='New York City'] = "New York"
test_group <- finalCostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate)) %>%
arrange(country, city)
View(test_group)
subset(test_group, city=="Alexandria")
test_group <- finalCostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate)) %>%
ungroup() %>%
arrange(country, city)
View(test_group)
finalCostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
finalCostOfLiving$city[finalCostOfLiving$city=='New York City'] = "New York"
finalCostOfLiving <- finalCostOfLiving %>% arrange(country, city)
test_group <- finalCostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate)) %>%
ungroup() %>%
arrange(country, city)
View(finalCostOfLiving)
unnested_CostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
unnested_CostOfLiving$city[unnested_CostOfLiving$city=='New York City'] = "New York"
unnested_CostOfLiving <- unnested_CostOfLiving %>% arrange(country, city)
View(unnested_CostOfLiving)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
unnested_CostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
unnested_CostOfLiving$city[unnested_CostOfLiving$city=='New York City'] = "New York"
finalCostOfLiving <- unnested_CostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate)) %>%
ungroup() %>%
arrange(country, city)
View(finalCostOfLiving)
library(dplyr)
library(tidyr)
library(data.table)
#Cost of living data - select necessary columns and bind US + Int'l
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, state, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem$state = ''
intl_per_diem <- intl_per_diem %>% select(city, state, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
intl_per_diem$country <- tolower(intl_per_diem$country)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
intl_per_diem$country <- sapply(intl_per_diem$country, simpleCap)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
unnested_CostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
unnested_CostOfLiving$city[unnested_CostOfLiving$city=='New York City'] = "New York"
finalCostOfLiving <- unnested_CostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate)) %>%
ungroup() %>%
arrange(country, city)
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state$country = 'United States'
us_airports_by_state <- us_airports_by_state %>% select(state, country, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by=c('airport_code', 'country'))
airports$state[is.na(airports$state)] = ''
#City Data - seeded from Airports above, joined to cost of living data
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
cities <- mutate(cities, city_id=rownames(cities)) %>%
select(city_id, city, state, country, m_ie_rate)
cities$m_ie_rate[is.na(cities$m_ie_rate)] = 46
#Append city id to airports
airports <- airports %>%
left_join(cities, by = c('city', 'state', 'country')) %>%
select(airport_id, airport_code, name, city_id, name, latitude, longitude)
View(cities)
View(cities)
library(dplyr)
library(tidyr)
library(data.table)
#Cost of living data - select necessary columns and bind US + Int'l
us_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_us.csv')
us_per_diem$country <- 'United States'
us_per_diem <- us_per_diem %>% select(city, state, country, m_ie_rate)
us_per_diem$m_ie_rate <- gsub('$', '', us_per_diem$m_ie_rate)
us_per_diem <- data.table(us_per_diem)
setkey(us_per_diem)
us_per_diem <- unique(us_per_diem)
intl_per_diem <- read.csv('~/Desktop/sw_project/original_data_sources/per_diem_intl.csv')
intl_per_diem$state = ''
intl_per_diem <- intl_per_diem %>% select(city, state, country, m_ie_rate)
intl_per_diem <- data.table(intl_per_diem)
setkey(intl_per_diem)
intl_per_diem <- unique(intl_per_diem)
intl_per_diem$country <- tolower(intl_per_diem$country)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
intl_per_diem$country <- sapply(intl_per_diem$country, simpleCap)
all_per_diem <- rbind(us_per_diem, intl_per_diem)
unnested_CostOfLiving <- data.frame(all_per_diem) %>%
mutate(city = strsplit(as.character(city), " / ")) %>%
unnest(city)
unnested_CostOfLiving$city[unnested_CostOfLiving$city=='New York City'] = "New York"
finalCostOfLiving <- unnested_CostOfLiving %>%
group_by(city, state, country) %>%
summarize(m_ie_rate = max(m_ie_rate)) %>%
ungroup() %>%
arrange(country, city)
#Airport Data - select necessary columns
us_airports_by_state <- read.csv('~/Desktop/sw_project/original_data_sources/us_airports_by_state.csv', stringsAsFactors=FALSE)
setnames(us_airports_by_state, "code", "airport_code")
us_airports_by_state$country = 'United States'
us_airports_by_state <- us_airports_by_state %>% select(state, country, airport_code)
airports <- read.csv('~/Desktop/sw_project/original_data_sources/airports.csv')
setnames(airports, "iata_faa","airport_code")
airports$latitude <- round(airports$latitude,2)
airports$longitude <- round(airports$longitude,2)
airports <- airports %>%
filter(airport_code!='', city!='', iaco!='') %>%
arrange(country, city) %>%
left_join(us_airports_by_state, by=c('airport_code', 'country'))
airports$state[is.na(airports$state)] = ''
#City Data - seeded from Airports above, joined to cost of living data
cities <- airports %>%
select(city, state, country) %>%
unique()
cities <- cities %>% left_join(finalCostOfLiving, by = c('city', 'state', 'country'))
cities <- mutate(cities, city_id=rownames(cities)) %>%
select(city_id, city, state, country, m_ie_rate)
cities$m_ie_rate[is.na(cities$m_ie_rate)] = 46
#Append city id to airports
airports <- airports %>%
left_join(cities, by = c('city', 'state', 'country')) %>%
select(airport_id, airport_code, name, city_id, name, latitude, longitude)
#Create csv files
write.csv(airports, '~/Desktop/sw_project/original_data_sources/airports_model.csv', row.names=FALSE)
write.csv(cities, '~/Desktop/sw_project/original_data_sources/cities_model.csv', row.names=FALSE)
View(airports)
